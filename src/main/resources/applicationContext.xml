<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
       default-lazy-init="true">

    <!--第一步-->
    <!--定义服务层代码存放的包扫描路径-->
    <context:component-scan base-package="common.db.jpa.service"/>
    <context:component-scan base-package="guavaapi.cache"/>

   <!-- &lt;!&ndash;第二步&ndash;&gt;
    &lt;!&ndash;定义实体的工厂bean&ndash;&gt;
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="userPU"/>
        <property name="persistenceXmlLocation" value="classpath:persistence.xml"></property>
    </bean>

    &lt;!&ndash;第三步&ndash;&gt;
    &lt;!&ndash;定义事务管理器&ndash;&gt;
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    &lt;!&ndash;第四步&ndash;&gt;
    &lt;!&ndash;定义repository接口的存放目录&ndash;&gt;
    &lt;!&ndash;定义接口实现的后缀，通常用Impl&ndash;&gt;
    &lt;!&ndash;定义实体工厂的引用&ndash;&gt;
    &lt;!&ndash;定义事务管理器的引用&ndash;&gt;
    <jpa:repositories base-package="common.db.jpa.repository"
                      repository-impl-postfix="Impl"
                      entity-manager-factory-ref="entityManagerFactory"
                      transaction-manager-ref="transactionManager"/>


    &lt;!&ndash;第五步&ndash;&gt;
    &lt;!&ndash;声明采用注解的方式申明事务&ndash;&gt;
    <tx:annotation-driven transaction-manager="transactionManager"/>-->

    <bean id="car" class="spring.Car" init-method="init" destroy-method="destroy">
        <property name="brand" value="Audi"/>
        <property name="price" value="20000.0"/>
    </bean>

    <bean id="postProcessor" class="spring.CarPostProcessor"/>

</beans>